0. 통합 개발도구 환경설정
  - 에밋 설치(STS의 경우 설치시 마지막 체그박스를 삭제한 후 설치해야 함)
  - lombok설치(다운로드 받은 lombok.jar파일을 실행하여 개발도구 경로를 지정해줌) ==> 설치시 개발도구를 종료한 후 설치
  개발도구 실행후
	한글설정(5곳)
	필요한 템플릿 파일 작성(WEB의 HTML, JSP(View페이지로JSP를 사용할 경우, View페이지로 thymeleaf를 사용할 경우		는 작성하지 않아도 됨)의 템플릿 파일 수정또는 새로 작성)
	서버 설정 : 스프링 부트는 설정하지 않아도 됨
	실행브라우저 설정 => 크롬

1. 스프링 프로젝트 생성(Spring Legercy)(View page를 jsp로 할 때, 필요한 라이브러리를 직접 관리) => Spring MVC 선택후 생성 
   스프링 부트를 기반한 프로젝트는 웹상에서 프로젝트를 생성하거나 통합개발도구에서 생성할 수 있음
   => 스프링 부트는 필요한 라이브러리와 개발환경들을 선택하면 개발에 필요한 기본적인(필수) 라이브러리들을 자동으로 설정해준다.

  프로젝트에서 필요한 라이브러리 설정(pom.xml)
  기본라이브러리
   - test : junit( 4. 12이상의 버전), spring-test
   - db관련 라이브러리 
    - 커넥션 관련 : hikaricp, c3p0, 아파치 dbcp중에 하나를 선택 => xml을 통한 빈 등록 필요(속성을 통하여 커넥션정보제공)
	=> hikaricp를 커넥션 풀로 사용할 경우 DB연결 환경설정과 DataSource(커넥션풀 인터페이스)을 빈으로 등록
	    DB연결 환경설정 구현체(클래스) : Hikaricpconfig를 빈으로 등록하고 속성을 통하여 커넥션 정보 제공
	    DataSource(커넥션풀 인터페이스) 구현체 : HikariDataSource를 빈으로 등록하고 생성자를 통하여 커넥션 등록 주입
    - JDBC 구현 관련 : Spring-jdbc 를 기반으로하는 Mybatis 또는 JPA
	=> Mybatis : 2개의 클래스를 빈으로 등고
	     1) SqlSessionFactoryBean 빈 등록 : 속성을 이용하여 dataSource, configLocation, mapperLocations 설정
	     2) SqlSessionTemplate 빈 등록 : 생성자를 이용하여 SqlSessionFactoryBean 설정(주입)

  유틸리티 라이브러리
    DTO 클래스 정의 : lombok
	=> 독립적으로 라이브러리만 추가해서 사용할 수 없고 반드시 통합개발도구 등록후 라이브러리 사용
    File 전송 : commons-fileupload

2. 빈 생성 정보파일(applicationContext.xml) 만들기 및 빈 생성 정보파일 스프링 등록
  가. 빈 생성 정보파일(applicationContext.xml)만들기
      스프링 웹프로젝트 생성시 2개의 설정정보파일이 기본적으로 만들어져있음(이름은 다를 수 있음)
      - root-context.xml : application 관련 빈 설정 정보(src/main/java)
      - servlet-context.xml : 웹 관련 빈 설정정보
	=> view 리졸버 등록 : 요청에 대한 응답 페이지 형식을 결정
			(jsp를 응당페이지로 사용시 InternalResourceViewResolver를 빈으로 등록하고
				prefix와 suffix속성을 통하여 응답페이지의 경로 및 확장자를 최소화 한다.)
			<beans:bean class="org.spring.framework.web.servlet.view.InternalResourceViewResolver">
				<beans:property name ="prefix" value="/WEB-INF/views/" />
				<beans:property name ="suffix" value="jsp" />
			</beans:bean>
			(jsp가 아닌 다른 형식을 응답페이지로 사용할 경우 형식에 맞는 빈을 등록하고 필요에 따라 속성 지정 예시는 타임리프를 응답페이지로 사용할 경우)
			<bean>
				<property name ="prefix" value="/WEB-INF/views/" />
				<property name ="suffix" value="html" />
				<property name ="characterEncoding" value="UTF-8" />
				<property name ="suffix" value="html" />
			</bean>
			
	=> resources 등록,
	=> component-scan