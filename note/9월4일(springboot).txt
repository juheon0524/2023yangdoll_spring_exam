http://127.0.0.1/String => 나의 살던 고향은 ~

http://127.0.0.1/Member => 
		{"memId":"juheon","password":"honggildong1234","email":"juheon@naver.com"} <== 하나의 json 형태의 자료를 전달받음

http://127.0.0.1/List =>
		[
			{"memId":"juheon","password":"1234","email":"juheon@naver.com"},
			{"memId":"2juheon","password":"2345","email":"2juheon@naver"},
			{"memId":"3juheon","password":"3456","email":"3juheon@naver"}
		] <== 배열요소의 json 형태의 자료들을 전달받음

@RestController는 요청에 대한 응답으로 자료를 반환한다, 객체 자료의 경우는 json의 형태로 반환

==================================================================

ORM => O : 자바 객체(DTO객체(?) => Entity객체)
	R : RDBMS 의 R을 의미 => 관계형(?) 데이터베이스 => DataBase
	M : 연결

ORM 프레임워크 => 가장 대표적인 것 => 하이버네이트(스프링에서 기본적으로 사용)
JPA : 자바에서 자료를 영구적으로 관리하기 위한 표준 인터페이스(?)

영속성 컨텍스트 : Application과 DB사이에서 객체(Enity 객체)를 보관하는 가상의 공간(DB)

=================================================================

application.properties 기본틀
# 서버 포트 설정 => 톰켓 기본은 8080 => 80으로 변경
server.port = 80

# DB연결
spring.datasource.driver-class-name = oracle.jdbc.OracleDriver
spring.datasource.url = jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username = juheon
spring.datasource.password = juheon

# 실행되는 쿼리 콘솔 출력
spring.jpa.properties.hibernate.show_sql=true

# 콘솔창에 출력되는 쿼리를 가독성이 좋게 포멧팅
spring.jpa.properties.hibernate.format_sql=true

#쿼리에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace

spring.jpa.hibernate.ddl-auto=create
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect


