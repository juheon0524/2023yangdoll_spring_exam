익셉션
- 체키드 익셉션 : 자바 코드에서 반드시 익셉션 처리를 해주어야 하는 익셉션 => 컴파일 자체가 안된다.
- 언체키드 익셉션 : 런 타임 익셉션 => 실행 중간에 발생될 수 있는 익셉션 => 컴파일과는 무관


-익셉션 처리 : 고참에게 물어봐라 (어떤 방법으로 처리 해야 하는지)
 1.잡아서 익셉션을 해결하든지.
 2.보고 하든지
 3.해결(체크익셉션)하면서 보고(언체크익셉션)하든지 <= 익셉션 변경


=======================================================================

자바 DB연동 DAO클래스 만들기
- 준비작업
필요한 것(오라클DB vendor에서 제공하는 드라이버(ojdbc8.jar)) => 환경설정
1.WAS를 기반 : 웹 기반 => WAS의 라이브러리 폴더에 드라이버 복사
2.순수 자바 기반 : 프로젝트마다 드라이버 등록
3,자바 1.8버전이하 애서는  자바 라이브러리에 등록(복사해서 넣기)

-개발작업
1.테이블 구조와 유사한 클래스를 정의한다. => Bean or VO
  필드로 테이블의 컬럼명과 데이터 타입을 정의
  기본생성자, 필수입력항목 생성자, 전체 입력항목 생성자
  hashcode & equals, to String() 오버라이딩 한다.

2.DAO클래스(데이터베이스에 접근해서 CRUD작업을 하는 클래스)를 만든다.
  C : 테이블에 자료 입력 <= 테이블의 내용이 변경됨
  R : 테이블에 저장된 자료 조회 <= 테이블의 내용이 변경되지 않음.
  U : 테이블에 저장된 자료를 변경 <= 테이블의 내용이 변경됨
  D : 테이블에 저장된 자료 삭제 <= 테이블의 내용이 변경됨
  2-1 해당 CRUD작업을 위한 메서드를 만든다.
  -테이블에 내용이 변경되는 작업을 하는 메서드의 반환 타입은 void이거나 정수형이다.
  -테이블의 내용을 조회하는 작업의 경우는 메서드의 반환 타입이
   특정컬럼 타입(조회결과 단일행 단일컬럼)이거나 Bean타입(단일행 멀티컬럼)이거나 List<Bean>타입(멀티행 멀티컬럼)이 된다.

  2-2 각각의 메서드에(2-1에서 정의한 메서드) 필요한 데이터베이스 연결작업과 명령생성작업,실행작업,자원반납작업을 수행
	2-2-1 연결작업
		1) 드라이버 로딩( Class.forName("클래스풀네임") ) => 다운로드받아 추가한 라이브러리에서 제공
		2) 커넥션 연결 객체 생성 =>Connection con = DriverManager.getConnection("url", "사용자아이디", "비밀번호")
		   오라클 url의 구성 => jdbc:oracle:thin:@서버가있는 도메인명 또는 아이피주소:포트번호/서비스명
				  => jdbc:oracle:thin:@서버가있는 도메인명 또는 아이피주소:포트번호:sid명

	2-2-2 SQL명령객체 생성(PreparedStatement, Statement객체) => 커넥션 객체를 이용해서 명령객체를 생성한다.
		PreparedStatement ps = con.prepareStatement("쿼리문")
		명령 객체 생성후 생성된 명령객체를 이용하여 필요한 데이터를 매칭해준다. => ps.set매칭한 데이터타입(순서,자료)

	2-2-3 명령 실행 후 실행결과 자원 저장
		1)테이블의 내용이 변경되는 경우 실행명령은 ps.executeUpdate()이고 변경이 되지 않을 경우 ps.executeQuery()이다.
		2)수행결과를 저장한다.
		  ps.executeUpdate() 명령 실행후 정수형변수에 저장
		  ps.executeQuery() 명령 실행후 ResultSet변수에 저장한다.

  2-3 처리된 결과 반환
	1)테이블의 내용 변경이 있는 경우(insert, delete, update쿼리 실행한 경우) 결과 반환
	   메서드 생성시 반환타입에 대한 변수 선언 및 초기화(기본값)
	   ps.executeUpdate() 결과를 변수에 저장
	   메서드의 마지막 문장에서 변수 반환

	2)테이블의 내용 변경이 없는 경우(select 쿼리 실행한 경우) 결과 반환
	   메서드 생성시 반환타입에 대한 변수 선언 및 초기화(기본값 => 0, null)
	   ps.executeQuery() 실행 결과를 ResultSet에 저장
	   실행 결과물 유무를 rs.next()로 확인 (일반적으로 while구문을 이용)
	   결과물이 있을 경우 반환객체를 생성하고 
	   생성된 객체에 낱개의 자료(컬럼의 개수만큼)를 담고 => resultset에서 가져온 컬럼명을 이용해서( rs.get자료타입("컬럼명") )
		=> 조기 리턴이 가능하면 조기 리턴을 해준다.(1행을 조회할 경우 while 구문의 마지막문장에)
		=> 조기 리턴이 가능하면 조기 리턴을 해준다.(여러행(List)을 조회할 경우 while 구문종료 후 바로)
	   메서드의 마지막 구문에 반환	   
	   
